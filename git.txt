解释工作区,暂存区,版本库的区别
工作区:就是你在电脑里能看到的目录;
版本库:工作区有一个隐藏目录.git,是Git的版本库
暂存区:Git的版本库称为stage（或者叫index）的暂存区
一:创建版本库
  1:选择一个合适的地方，创建一个空目录;
  2:通过git init命令把这个目录变成Git可以管理的仓库:可以用ls -ah命令就可以看见
  3:用命令git add告诉Git，把文件从工作区添加到暂存区;可反复多次使用，添加多个文件；
  4:用命令git commit -m "写注释" 告诉Git，把文件用命令从暂存区提交到历史记录;
二:查看历史纪录:
   1:在历史纪录的基础上:HEAD指向的版本就是当前版本，用git log可以查看提交历史，可以确定要回退到哪个版本,简介版git log --pretty=oneline。

    用git reflog查看命令历史，以便确定要回到哪个版本(比如有三个版本,现在在第二个版本,但想回到第三个版本,可以用git reflog命令看到原来输入的历史记录)。
   1.1:查看版本:git reset --hard HEAD  查看上一个版本就是HEAD^，上上一个版本就是HEAD^^，当然往上100个版本写成HEAD~100。
三查看状态:git status
四:撤销修改:1:在工作区未被提交到暂存区可以用git checkout --文档名字进行删除或者直接文档里面删除;
            2:被提交到暂存区：当改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，第一步用git log 查看历史记录;第二步用命令git reset --hard HEAD。
五:删除文档
  前提:在历史纪录中;
1:git rm 文档名
2:还原:git status可以看到所删文档在暂存区,用git commit -m "暂存区的文档内容:deleted:add.txt" 然后用git reset --hard HEAD^还原删除文档

六:创建切换分支
查看分支：git branch

创建分支：git branch 创建的分支名字

切换分支：git checkout 分支名字

创建+切换分支：git checkout -b 分支名字

合并某分支到当前分支：git merge 分支名字

删除分支：git branch -d 创建的分支名字